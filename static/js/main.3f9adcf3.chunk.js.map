{"version":3,"sources":["resources/background_pleb.jpg","resources/logo.png","resources/background_gm.jpg","resources/logo_gm.png","actions/errorHandlingActions.js","actions/userActions.js","actions/authActions.js","components/Menu.js","components/ErrorHandling.js","components/Home.js","actions/roomActions.js","components/Room.js","actions/questionCollectionActions.js","components/Adminpanel.js","components/Register.js","components/AdminLogin.js","components/ActiveUsers.js","components/TimerBar.js","components/Project.js","components/AddQuest.js","components/HandleQuestions.js","components/Logout.js","router.js","App.js","serviceWorker.js","reducers/quizReducer.js","reducers/errorHandlingReducers.js","reducers/activeUsersReducer.js","reducers/authReducer.js","reducers/collectionsReducer.js","reducers/roomReducer.js","reducers/userReducer.js","reducers/rootReducer.js","store.js","index.js"],"names":["module","exports","__webpack_require__","p","showSnackbarMessage","message","type","payload","showSnackbarError","errorMessage","updateUserStats","data","updateAllUserStats","updateUserPoints","getUserInRoom","dispatch","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","getState","roomId","failMsg","rawResponse","response","wrap","_context","prev","next","fetch","concat","method","headers","Accept","Content-Type","sent","json","success","content","stop","this","_x","_x2","apply","arguments","updateUserInDb","_ref2","_callee2","uid","points","_context2","body","JSON","stringify","_x3","_x4","setUser","loginAsAdmin","history","user","name","password","_data","token","push","loginAsStudent","username","_data2","withStyles","root","flexGrow","zIndex","grow","menuButton","marginLeft","marginRight","appHeight","minHeight","roomStyleText","fontWeight","verticalAlign","avatar","float","props","classes","isAdmin","adminPanel","auth","createQuiz","setColor","react_default","createElement","className","AppBar_default","position","color","Toolbar_default","react","Avatar_default","alt","src","width","toUpperCase","Button_default","onClick","goBack","styles","error","background","red","ErrorHandling","handleClose","_this","renderSnackbar","Snackbar_default","open","snackbarOpen","autoHideDuration","onClose","ContentProps","React","Component","compose","connect","store","errorHandling","backgroundImage","require","logo","Home","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleChange","event","setState","defineProperty","target","value","validation","_this$state","state","login","_this$props","loading","_this$state2","_this$props2","components_Menu","LinearProgress_default","thickness","main","Paper_default","container","Typography_default","variant","welcome","margin","TextField_default","onChange","id","label","fullWidth","autoFocus","InputLabelProps","shrink","InputProps","style","fontSize","height","marginBottom","marginTop","disabled","size","copyright","components_ErrorHandling","display","flexDirection","alignItems","justifyContent","backgroundColor","backgroundSize","padding","paddingTop","textAlign","setRoom","createRoomAction","room","localStorage","getItem","abrupt","Authorization","getRoomFromDb","updateRoomInDb","_ref3","_callee3","roomIdInDb","_context3","update","_x5","_x6","Room","selectedAnswer","selected","correctAnswer","currentQuestion","match","params","isRight","student","parse","lastQuestion","setItem","then","openForAnswer","_this$props$user","rightAnswer","questionClosed","createAnswerButtons","answers","listAlpah","values","map","item","index","key","Card_default","card","CardActionArea_default","cardAction","CardContent_default","orangeAvatar","component","renderQuestion","questions","quiz","gutterBottom","selectedQuestion","filter","question","order","answer","flexWrap","updateQuiz","userData","score","viewQuest","Chip_default","icon","Face_default","clickable","chip","button","theme","objectSpread","mixins","gutters","spacing","unit","paddingBottom","maxWidth","activeRoom","fetched","addToCollection","updateCollection","getQuestionCollections","createCollectionAction","updateCollectionAction","url","_id","removeCollectionAction","_ref4","_callee4","_context4","_x7","_x8","Adminpanel","createRoom","code","Math","ceil","Date","now","Hashids","encode","createRoomId","numberOfQuestions","createdBy","active","created","editCollection","collectionId","renderCards","questionCollections","keys","length","xKey","x","CardMedia_default","media","image","imgUrl","title","description","CardActions_default","e","collectionFetched","_this$props3","cardList","input","minWidth","Project","inputname","pw1","pw2","handleClickOpen","handleRegister","catch","err","console","log","_this2","Dialog_default","aria-labelledby","DialogTitle_default","DialogContent_default","DialogContentText_default","DialogActions_default","stepper","withTheme","AdminLogin","pressEnterToLogin","wich","jwt","Register","inputFocused","borderColor","boxShadow","ActiveUsers","renderActiveUsers","users","ListItem_default","listitem","ListItemText_default","disableTypography","primary","userText","secondary","pointsText","getNewUserData","interval","setInterval","clearInterval","gameMaster","userList","List_default","People_default","rightIcon","onlineText","TimerBar","completed","time","currentTime","inProgress","lockStart","showEndTime","reseted","progress","timer","questionOpenForAnswer","showRightAnswer","start","nextQuest","clearTimer","_this$state3","wrapperButtons","textField","maxHeight","alignItem","wrapperChip","cardRight","raised","selectedA","elevation","showTimer","nextQuestion","_this$props$room","isOpen","showIt","showTime","components_ActiveUsers","components_TimerBar","AddQuest","inputKey","renderAnswer","textFieldDiv","textFieldWithButton","textFieldButton","setCorrectAnswer","saveQuestion","passed","addQuestion","b","changeAnswersOption","add","indexToAdd","answersList","multiline","min_title_length","min_desc_length","min_img_length","HandleQuestions","handleChangeQuestions","questKey","changeKey","undefined","question_id","random","new_quiz","collection","saveQuiz","category","q","checkQuizData","removeQuiz","removeQuestion","renderTableView","ExpansionPanel_default","ExpansionPanelSummary_default","paddingRight","ExpansionPanelDetails_default","optionKey","placeholder","isLoaded","table","paper","rows","components_AddQuest","_questionCollections$","expand","heading","typography","pxToRem","fontWeightRegular","contentWrapper","removeButtonDiv","border","borderRadius","expPanel","Logout","createMuiTheme","palette","createPalette","light","dark","contrastText","overrides","MuiDialog","paperScrollPaper","overflowY","useNextVariants","Router","core_styles","Switch","Route","exact","path","Timer","App","router","Boolean","window","location","hostname","ADD_TO_VALUE_EXAMPLE","initialState","reducer","action","ROOM_RECIVED","started","stoped","ended","UPDATE_USER","UPDATE_POINTS","rootReducer","combineReducers","editQuiz","dialogOpen","activeUsersReducer","removeItem","toConsumableArray","indexOfOldCollection","findIndex","slice","newState","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","es","BrowserRouter","basename","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3f9adcf3.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/background_pleb.16057969.jpg\";","module.exports = __webpack_public_path__ + \"static/media/logo.32d04031.png\";","module.exports = __webpack_public_path__ + \"static/media/background_gm.c0a92ebb.jpg\";","module.exports = __webpack_public_path__ + \"static/media/logo_gm.29b888b5.png\";","export function showSnackbarMessage(message) {\r\n  return {\r\n    type: 'SHOW_SNACKBAR_MESSAGE',\r\n    payload: message,\r\n  };\r\n}\r\n\r\nexport function showSnackbarError(errorMessage) {\r\n  return {\r\n    type: 'SHOW_SNACKBAR_ERROR',\r\n    payload: errorMessage,\r\n  };\r\n}\r\n\r\nexport function closeFeedback() {\r\n  return {\r\n    type: 'CLOSE_FEEDBACK',\r\n  };\r\n}\r\n","import { showSnackbarError } from './errorHandlingActions.js';\r\n\r\nexport function updateUserStats(data) {\r\n  return {\r\n    type: 'UPDATE_USER',\r\n    payload: data,\r\n  };\r\n}\r\n\r\n\r\nexport function updateAllUserStats(data) {\r\n  return {\r\n    type: 'RECIVED_ALL_USER',\r\n    payload: data,\r\n  };\r\n}\r\n\r\n\r\nexport function updateUserPoints(data) {\r\n  return {\r\n    type: 'UPDATE_POINTS',\r\n    payload: data,\r\n  };\r\n}\r\n\r\n\r\nexport const getUserInRoom = (data, dispatch) => async (dispatch, getState) => {\r\n  const { roomId, failMsg } = data;\r\n\r\n  const rawResponse = await fetch(`https://stark-ocean-61611.herokuapp.com/api/activeUsers/${roomId}`, {\r\n    method: 'GET',\r\n    headers: {\r\n      'Accept': 'application/json',\r\n      'Content-Type': 'application/json',\r\n    }\r\n  });\r\n\r\n  const response = await rawResponse.json();\r\n  if(response.success){\r\n    dispatch(updateAllUserStats(response.content))\r\n  } else {\r\n    if( failMsg ){\r\n      dispatch(showSnackbarError('Något gick fel vid hämtning av användare.'));\r\n    }\r\n  }\r\n}\r\n\r\n\r\nexport const updateUserInDb = (data, dispatch) => async (dispatch, getState) => {\r\n  const { uid, points } = data;\r\n  const rawResponse = await fetch(`https://stark-ocean-61611.herokuapp.com/api/activeUsers/edit/${uid}`, {\r\n    method: 'PUT',\r\n    headers: {\r\n      'Accept': 'application/json',\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify(\r\n      {\r\n        points\r\n      })\r\n    });\r\n\r\n\r\n  const response = await rawResponse.json();\r\n  if(response.success){\r\n    dispatch(updateUserPoints({points}));\r\n  } else {\r\n    dispatch(showSnackbarError('Fel användarnamn eller lösenord.'));\r\n  }\r\n\r\n}\r\n","import { showSnackbarError } from './errorHandlingActions.js';\r\nimport { updateUserStats } from './userActions.js';\r\n\r\nexport function setUser(data) {\r\n  return {\r\n    type: 'AUTH_RECEIVED',\r\n    payload: data,\r\n  };\r\n}\r\n\r\nexport function logoutUserAction() {\r\n  return {\r\n    type: 'USER_LOGOUT'\r\n  };\r\n}\r\n\r\nexport const loginAsAdmin = (data, dispatch) => async (dispatch, getState) => {\r\n  const { history, user } = data;\r\n  const { name, password } = user;\r\n\r\n  const rawResponse = await fetch('https://stark-ocean-61611.herokuapp.com/api/authenticate', {\r\n    method: 'POST',\r\n    headers: {\r\n      'Accept': 'application/json',\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify(\r\n      {\r\n        name,\r\n        password,\r\n      }\r\n    )\r\n  });\r\n\r\n\r\n  const response = await rawResponse.json();\r\n  if(response.success){\r\n    const data = {\r\n      name,\r\n      token: response.content.token\r\n    }\r\n    dispatch(setUser(data))\r\n\r\n    history.push('/admin/home');\r\n  } else {\r\n    dispatch(showSnackbarError('Fel användarnamn eller lösenord.'));\r\n  }\r\n\r\n}\r\n\r\n\r\nexport const loginAsStudent = (data, dispatch) => async (dispatch, getState) => {\r\n  const { history, username, roomId } = data;\r\n\r\n  const rawResponse = await fetch('https://stark-ocean-61611.herokuapp.com/api/activeUsers/add', {\r\n    method: 'POST',\r\n    headers: {\r\n      'Accept': 'application/json',\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify(\r\n      {\r\n        name: username,\r\n        points: 0,\r\n        roomId\r\n      }\r\n    )\r\n  });\r\n\r\n\r\n  const response = await rawResponse.json();\r\n  if(response.success){\r\n    const data = {\r\n      name: username,\r\n      token: response.content.token,\r\n      uid: response.content['_id'],\r\n      points: 0,\r\n    }\r\n    dispatch(updateUserStats(data));\r\n    history.push(`/room/${roomId}`);\r\n  } else {\r\n    dispatch(showSnackbarError('Fel användarnamn eller lösenord.'));\r\n  }\r\n\r\n}\r\n","import React, { Fragment } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nconst styles = {\r\n  root: {\r\n    flexGrow: 1,\r\n    zIndex: 100,\r\n  },\r\n  grow: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginLeft: -12,\r\n    marginRight: 20,\r\n  },\r\n  appHeight: {\r\n    minHeight: 50,\r\n  },\r\n  roomStyleText: {\r\n   fontWeight: 500,\r\n   verticalAlign: -12,\r\n   marginLeft: 10\r\n },\r\n avatar: {\r\n   float: 'left',\r\n },\r\n};\r\n\r\nfunction Menu(props) {\r\n  const { classes, history, roomId, isAdmin, adminPanel, auth, createQuiz } = props;\r\n  let setColor = 'primary'\r\n  if( isAdmin ){\r\n    setColor = 'secondary'\r\n  }\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\" color={setColor} >\r\n        <Toolbar className={classes.appHeight}>\r\n          <div className={classes.grow} color=\"inherit\">\r\n          {roomId &&\r\n            <p className={classes.roomStyleText}>{`ROOMID #${roomId}`}</p>\r\n          }\r\n          {adminPanel && auth &&\r\n           <Fragment>\r\n           <Avatar alt={auth.name} src=\"https://upload.wikimedia.org/wikipedia/commons/3/38/Wikipedia_User-ICON_byNightsight.png\" width=\"50px\" className={classes.avatar} />\r\n           <span className={classes.roomStyleText}>\r\n             GM {auth.name.toUpperCase()}\r\n           </span>\r\n           </Fragment>\r\n         }\r\n          </div>\r\n          {!roomId && isAdmin &&\r\n            <Button color=\"inherit\" onClick={() => { history.push('/'); }}>Student</Button>\r\n          }\r\n          {!roomId && !isAdmin && !adminPanel && !createQuiz &&\r\n            <Button color=\"inherit\" onClick={() => { history.push('/admin'); }}>Admin</Button>\r\n          }\r\n          {roomId &&\r\n            <Button color=\"inherit\" onClick={() => { history.push('/logout'); }}>LOGGA UT</Button>\r\n          }\r\n          {createQuiz &&\r\n            <Button color=\"inherit\" onClick={() => { history.goBack(); }}>Go back</Button>\r\n          }\r\n          {adminPanel && auth &&\r\n            <div>\r\n              <Button color=\"inherit\" onClick={() => { history.push('/logout'); }}>Logga ut</Button>\r\n            </div>\r\n          }\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}\r\n\r\nMenu.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(Menu);\r\n","import React, { Fragment } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { compose } from 'redux';\r\nimport { PropTypes } from 'prop-types';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport red from '@material-ui/core/colors/red';\r\n// import green from '@material-ui/core/colors/green';\r\nimport { withStyles } from '@material-ui/core';\r\nimport { closeFeedback } from '../actions/errorHandlingActions';\r\n\r\nconst mapStateToProps = store => ({\r\n  snackbarOpen: store.errorHandling.snackbarOpen,\r\n  error: store.errorHandling.error,\r\n  message: store.errorHandling.message,\r\n});\r\n\r\nconst styles = {\r\n  error: {\r\n    background: red[500],\r\n  },\r\n  success: {\r\n    background: '#FB8C00',\r\n    color: '#FAFAFA'\r\n  },\r\n};\r\n\r\nclass ErrorHandling extends React.Component {\r\n  handleClose = () => {\r\n    this.props.dispatch(closeFeedback());\r\n  }\r\n\r\n  renderSnackbar = () => (\r\n    <Snackbar\r\n      open={this.props.snackbarOpen}\r\n      message={this.props.message}\r\n      autoHideDuration={3000}\r\n      onClose={this.handleClose}\r\n      ContentProps={{\r\n        classes: {\r\n            root: this.props.error ? this.props.classes.error : this.props.classes.success,\r\n        },\r\n    }}\r\n    />\r\n  )\r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        {this.renderSnackbar()}\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nErrorHandling.propTypes = {\r\n  snackbarOpen: PropTypes.any.isRequired,\r\n  error: PropTypes.any.isRequired,\r\n  message: PropTypes.any.isRequired,\r\n  dispatch: PropTypes.func.isRequired,\r\n  classes: PropTypes.any.isRequired,\r\n};\r\n\r\nexport default compose(\r\n  withStyles(styles),\r\n  connect(mapStateToProps),\r\n)(ErrorHandling);\r\n","import React, { Component } from 'react';\r\nimport { compose } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\nimport { showSnackbarError } from '../actions/errorHandlingActions';\r\nimport { loginAsStudent } from '../actions/authActions';\r\n\r\nimport Menu from './Menu.js';\r\nimport ErrorHandling from './ErrorHandling.js';\r\n\r\nconst backgroundImage = require('../resources/background_pleb.jpg');\r\nconst logo = require('../resources/logo.png');\r\n\r\nconst styles = () => ({\r\n  main: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    minHeight: 'calc(100vh - 50px)',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    backgroundImage: `linear-gradient(to top, rgba(0, 0, 0, .9), rgba(0, 0, 0, .9)), url(${backgroundImage})`,\r\n    backgroundColor: '#fafafa',\r\n    backgroundSize: 'cover',\r\n  },\r\n  container: {\r\n    padding: 40,\r\n    marginTop: -70,\r\n    paddingTop: 30,\r\n  },\r\n  margin: {\r\n    width: 350,\r\n  },\r\n  welcome: {\r\n    textAlign: 'center',\r\n  },\r\n  login: {\r\n    textAlign: 'center',\r\n    marginBottom: 20,\r\n  },\r\n  copyright: {\r\n    textAlign: 'center',\r\n    fontSize: 11,\r\n    marginTop: -70,\r\n    color: '#fff',\r\n  },\r\n  logo: {\r\n    marginTop: -100,\r\n    marginBottom: 30,\r\n    zIndex: 1\r\n  }\r\n});\r\n\r\nclass Home extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      loading: false,\r\n      username: '',\r\n      roomId: '',\r\n    };\r\n  }\r\n\r\n  handleChange = name => (event) => {\r\n    this.setState({\r\n      [name]: event.target.value,\r\n    });\r\n  };\r\n\r\n  validation = () => {\r\n    const { username, roomId } = this.state;\r\n    const { dispatch } = this.props;\r\n    if (!username || !roomId) {\r\n      dispatch(showSnackbarError('Användarnamn eller ID är felaktigt.'));\r\n    } else {\r\n      this.login(username, roomId);\r\n    }\r\n  }\r\n\r\n  login = (username, roomId) => {\r\n    const { history, dispatch } = this.props;\r\n    const data = {\r\n      history,\r\n      username,\r\n      roomId\r\n    }\r\n    dispatch(loginAsStudent(data));\r\n  }\r\n\r\n  render() {\r\n    const { loading, username } = this.state;\r\n    const { classes, history } = this.props;\r\n\r\n    return (\r\n      <div>\r\n      <Menu history={history} username={username} />\r\n        {loading && <LinearProgress thickness={2} color='primary' />}\r\n        <div className={classes.main}>\r\n        <img src={logo} alt='Begame' className={classes.logo} width=\"250px\"/>\r\n          <Paper className={classes.container}>\r\n          <Typography variant='h6' className={classes.welcome}>Välkommen!</Typography>\r\n         <Typography variant=\"subtitle1\" className={classes.login}>Logga in med användarnamn och #ID</Typography>\r\n            <div className={classes.margin}>\r\n              <TextField\r\n                type=\"text\"\r\n                onChange={this.handleChange('username')}\r\n                id='input-with-icon-grid'\r\n                label='Användarnamn'\r\n                margin='dense'\r\n                variant='outlined'\r\n                fullWidth\r\n                autoFocus\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n                InputProps={{\r\n                  style: {\r\n                    fontSize: 13,\r\n                    height: 45,\r\n                  },\r\n                }}\r\n              />\r\n            </div>\r\n            <div className={classes.margin}>\r\n              <TextField\r\n                type=\"text\"\r\n                onChange={this.handleChange('roomId')}\r\n                id='input-with-icon-grid2'\r\n                label='#ID'\r\n                margin='dense'\r\n                variant='outlined'\r\n                fullWidth\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n                InputProps={{\r\n                  style: {\r\n                    fontSize: 13,\r\n                    height: 45,\r\n                  },\r\n                }}\r\n              />\r\n            </div>\r\n            <div className={classes.margin}>\r\n              <Button\r\n                style={{ marginBottom: 20, marginTop: 10 }}\r\n                variant='contained'\r\n                color='primary'\r\n                fullWidth\r\n                onClick={this.validation}\r\n                disabled={loading}\r\n                size='large'\r\n              >\r\n              Logga in\r\n              </Button>\r\n            </div>\r\n          </Paper>\r\n        </div>\r\n        <Typography className={classes.copyright}>© Copyright 2018 | All Rights Reserved | Begame</Typography>\r\n        <ErrorHandling />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = store => ({\r\n  snackbarOpen: store.errorHandling.snackbarOpen,\r\n  error: store.errorHandling.error,\r\n  message: store.errorHandling.message,\r\n});\r\n\r\nexport default compose(withStyles(styles), connect(mapStateToProps))(Home);\r\n","\r\n\r\nexport function setRoom(data) {\r\n  return {\r\n    type: 'ROOM_RECIVED',\r\n    payload: data,\r\n  };\r\n}\r\n\r\nexport function updateRoom(data) {\r\n  return {\r\n    type: 'ROOM_UPATED',\r\n    payload: data,\r\n  };\r\n}\r\n\r\n\r\nexport const createRoomAction = (data, dispatch) => async (dispatch, getState) => {\r\n  const { history, room } = data;\r\n  const token = localStorage.getItem('token');\r\n\r\n  if(!token || token === 'undefined'){\r\n      return;\r\n  }\r\n\r\n  const rawResponse = await fetch('https://stark-ocean-61611.herokuapp.com/api/rooms/add', {\r\n    method: 'POST',\r\n    headers: {\r\n      'Accept': 'application/json',\r\n      'Content-Type': 'application/json',\r\n      'Authorization': token,\r\n    },\r\n    body: JSON.stringify(\r\n        room\r\n    )\r\n  });\r\n\r\n  const response = await rawResponse.json();\r\n\r\n  if(response.success){\r\n    dispatch(setRoom(response.content))\r\n    history.push('/project/' + response.content.roomId);\r\n  }\r\n\r\n}\r\n\r\n\r\nexport const getRoomFromDb = (roomId, dispatch) => async (dispatch, getState) => {\r\n\r\n  const rawResponse = await fetch(`https://stark-ocean-61611.herokuapp.com/api/rooms/${roomId}`, {\r\n    method: 'GET',\r\n    headers: {\r\n      'Accept': 'application/json',\r\n      'Content-Type': 'application/json',\r\n    },\r\n  });\r\n\r\n  const response = await rawResponse.json();\r\n\r\n  if(response.success){\r\n    dispatch(setRoom(response.content[0]))\r\n  }\r\n}\r\n\r\n\r\nexport const updateRoomInDb = (data, dispatch) => async (dispatch, getState) => {\r\n  const token = localStorage.getItem('token');\r\n  const { roomIdInDb } = data;\r\n  if(!token || token === 'undefined'){\r\n    return;\r\n  }\r\n\r\n  const rawResponse = await fetch(`https://stark-ocean-61611.herokuapp.com/api/rooms/edit/${roomIdInDb}`, {\r\n    method: 'PUT',\r\n    headers: {\r\n      'Accept': 'application/json',\r\n      'Content-Type': 'application/json',\r\n      'Authorization': token,\r\n    },\r\n    body: JSON.stringify(\r\n        data.update\r\n    )\r\n  });\r\n\r\n  const response = await rawResponse.json();\r\n\r\n  if(response.success){\r\n    dispatch(setRoom(response.content))\r\n  }\r\n\r\n}\r\n","import React, { Component, Fragment } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { compose } from 'redux';\r\n\r\n//Material UI\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport FaceIcon from '@material-ui/icons/Face';\r\n\r\n//Imported components\r\nimport Menu from './Menu';\r\nimport { showSnackbarMessage } from '../actions/errorHandlingActions';\r\nimport ErrorHandling from './ErrorHandling.js';\r\nimport { getRoomFromDb } from '../actions/roomActions'\r\nimport { updateUserInDb, updateUserStats} from '../actions/userActions'\r\nimport { setUser } from '../actions/authActions'\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    ...theme.mixins.gutters(),\r\n    paddingTop: theme.spacing.unit * 2,\r\n    paddingBottom: theme.spacing.unit * 2,\r\n    width: 450,\r\n    margin: '50px auto'\r\n  },\r\n  card: {\r\n    maxWidth: 380,\r\n    marginBottom: 30\r\n  },\r\n  cardAction: {\r\n    width: 350,\r\n    maxWidth: 380,\r\n  },\r\n  orangeAvatar: {\r\n    color: '#fff',\r\n    backgroundColor: '#573697',\r\n    margin: '0px auto',\r\n    marginBottom: 10,\r\n  },\r\n  button: {\r\n    margin: theme.spacing.unit,\r\n  },\r\n});\r\n\r\nclass Room extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      id: props.match.params.id,\r\n      rightAnswer: null,\r\n      questionClosed: false,\r\n    }\r\n    const userData = JSON.parse(localStorage.getItem('student'));\r\n    if (userData) {\r\n      props.dispatch(updateUserStats(userData))\r\n      props.dispatch(setUser(userData))\r\n    }\r\n\r\n    // om ingen userData finns så skall vi skicka ut nissen.\r\n\r\n    const roomId = (props.match && props.match.params && props.match.params.id) || false;\r\n    props.dispatch(getRoomFromDb(roomId))\r\n\r\n  }\r\n\r\n  componentWillMount(){\r\n    const { dispatch } = this.props;\r\n    dispatch(showSnackbarMessage(`Välkommen till rum #${this.state.id}`));\r\n  }\r\n\r\n\r\n  selectedAnswer = (selected, correctAnswer, currentQuestion) => {\r\n    const roomId = this.props.match.params.id;\r\n    const { dispatch } = this.props;\r\n\r\n    const isRight = selected === correctAnswer;\r\n\r\n    let student = JSON.parse(localStorage.getItem('student'));\r\n\r\n    if(student.lastQuestion === currentQuestion){\r\n      dispatch(showSnackbarMessage('Du har redan svarat på frågan 🤔'))\r\n      return null;\r\n    }\r\n\r\n    student.lastQuestion = currentQuestion;\r\n    localStorage.setItem('student', JSON.stringify(student));\r\n\r\n    if (isRight) {\r\n      dispatch(showSnackbarMessage('Rätt svar! 😎'))\r\n      dispatch(getRoomFromDb(roomId)).then( ()=>{\r\n        const { openForAnswer } = this.props.room;\r\n\r\n        // check if current question is open for answers\r\n        if ( openForAnswer ) {\r\n          let { points,uid } = this.props.user;\r\n          points += 10;\r\n          dispatch(updateUserInDb({uid,points})).then( ()=>{\r\n            this.setState({rightAnswer: true, questionClosed: true}) // dont remove this.. need for update points also.. its to deep for react to handle\r\n          })\r\n        } else {\r\n            dispatch(showSnackbarMessage('Rätt svar! 😎'))\r\n        }\r\n      })\r\n    } else {\r\n      this.setState({rightAnswer: false,  questionClosed: true }) // dont remove this.. need for update points also.. its to deep for react to handle\r\n      dispatch(showSnackbarMessage('Fel! 😫'))\r\n    }\r\n\r\n\r\n  }\r\n\r\n\r\n  createAnswerButtons = (answers, correctAnswer, currentQuestion) => {\r\n    const { classes } = this.props;\r\n    const listAlpah = ['a', 'b', 'c','d','e','f','g','h'];\r\n    return Object.values(answers).map( (item, index ) => (\r\n      <Fragment key={index}>\r\n        <Card className={classes.card} onClick={() => this.selectedAnswer(listAlpah[index], correctAnswer, currentQuestion)}>\r\n          <CardActionArea className={classes.cardAction}>\r\n            <CardContent>\r\n              <Avatar className={classes.orangeAvatar}>{listAlpah[index].toUpperCase()}</Avatar>\r\n              <Typography component=\"p\">\r\n                { item }\r\n              </Typography>\r\n            </CardContent>\r\n          </CardActionArea>\r\n        </Card>\r\n      </Fragment>\r\n    ))\r\n  }\r\n\r\n\r\n  renderQuestion = () => {\r\n\r\n    const { room } = this.props;\r\n    const { quiz } = room || false;\r\n    const { questions } = quiz || false;\r\n\r\n    if ( !questions )\r\n      return (<div><Typography variant=\"h3\" gutterBottom>\r\n        Ej startad ännu\r\n      </Typography></div>)\r\n\r\n    const currentQuestion  = room && room.currentQuestion;\r\n\r\n    if (currentQuestion === 0)\r\n      return (<div><Typography variant=\"h3\" gutterBottom>Quiz ej startat</Typography></div>)\r\n\r\n    if (currentQuestion === -1)\r\n      return (<div><Typography variant=\"h3\" gutterBottom>SLUT</Typography></div>)\r\n\r\n    const selectedQuestion = Object.values(questions).filter(question => question.order === currentQuestion)[0];\r\n    const answer = this.createAnswerButtons(selectedQuestion.answers, selectedQuestion.correctAnswer, currentQuestion)\r\n\r\n    return (\r\n      <Fragment>\r\n        <h1 style={{fontSize: '3.5em', color: '#573697', fontWeight: 'bold', marginBottom: 100}}>{selectedQuestion.question}</h1>\r\n        <div style={{display: 'flex', justifyContent: 'space-between', marginBottom: 50, flexWrap: 'wrap'}}>\r\n          {answer}\r\n        </div>\r\n      </Fragment>)\r\n  }\r\n\r\n  updateQuiz = () =>{\r\n    const { dispatch } = this.props;\r\n    const { currentQuestion } = this.props.room;\r\n      dispatch(getRoomFromDb(this.state.id)).then( ()=>{\r\n      if ( currentQuestion !== this.props.room.currentQuestion ){\r\n        this.setState({questionClosed:false})\r\n      } else {\r\n        dispatch(showSnackbarMessage('Frågan är pågående!'))\r\n      }\r\n    })\r\n  };\r\n\r\n\r\n\r\n  render() {\r\n    const { history, classes, user } = this.props;\r\n    const score = user && user.points ? user.points : 0;\r\n    const viewQuest = this.renderQuestion();\r\n\r\n    return (\r\n      <Fragment>\r\n        <Menu roomId={this.state.id} history={history}/>\r\n        <div style={{margin: 10}}>\r\n        <Chip\r\n          icon={<FaceIcon />}\r\n          label={`${user.name}: ${score} poäng`}\r\n          clickable\r\n          className={classes.chip}\r\n          color=\"primary\"\r\n        />\r\n        </div>\r\n        <div style={{width: 800, height: 300, margin: '100px auto', textAlign: 'center' }}>\r\n          {viewQuest}\r\n          <Button\r\n            variant=\"contained\"\r\n            className={classes.button}\r\n            onClick={this.updateQuiz}\r\n            color=\"primary\"\r\n          >\r\n            Visa fråga\r\n          </Button>\r\n        </div>\r\n      <ErrorHandling />\r\n      </Fragment>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nlet mapStateToProps = store => ({\r\n    snackbarOpen: store.errorHandling.snackbarOpen,\r\n    error: store.errorHandling.error,\r\n    message: store.errorHandling.message,\r\n    room: store.activeRoom.data,\r\n    fetched: store.activeRoom.fetched,\r\n    user: store.user.data,\r\n});\r\n\r\nexport default compose(withStyles(styles), connect(mapStateToProps))(Room);\r\n","import { showSnackbarError, showSnackbarMessage } from '../actions/errorHandlingActions';\r\n\r\n\r\nexport function setCollection(data) {\r\n  return {\r\n    type: 'COLLECTION_RECIEVED',\r\n    payload: data,\r\n  };\r\n}\r\n\r\nexport function addToCollection(data) {\r\n  return {\r\n    type: 'COLLECTION_ADD',\r\n    payload: data,\r\n  };\r\n}\r\n\r\nexport function updateCollection(data) {\r\n  return {\r\n    type: 'COLLECTION_UPDATE',\r\n    payload: data,\r\n  };\r\n}\r\nexport function deleteCollection(data) {\r\n  return {\r\n    type: 'COLLECTION_DELETE',\r\n    payload: data,\r\n  };\r\n}\r\n\r\nexport const getQuestionCollections = (dispatch) => async (dispatch, getState) => {\r\n  const token = localStorage.getItem('token');\r\n  if(!token || token === 'undefined'){\r\n      return;\r\n  }\r\n  // const token = \"JWT eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJfaWQiOiI1YmJjYTViNzcyOGNlYTAwMDQ5MjdmZWIiLCJuYW1lIjoiam9oYW4iLCJwYXNzd29yZCI6IiQyYSQxMCRIMUN5RTl3dnp0TFQ5UEZrdmVad0ZldWg0MzlzTHBXLjl1ZnFhTDR6anFjVlV1ODJMcHp6VyIsIl9fdiI6MH0.J03YO2XbTR4iOLWnLDKAXv6lQhGMOcv-6sB1xWuTvW4\"\r\n  const rawResponse = await fetch('https://stark-ocean-61611.herokuapp.com/api/question-collection', {\r\n    headers: {\r\n      'Accept': 'application/json',\r\n      'Content-Type': 'application/json',\r\n      'Authorization': token,\r\n    }\r\n  });\r\n\r\n  const response = await rawResponse.json();\r\n\r\n\r\n  if(response.success){\r\n    dispatch(setCollection(response.content))\r\n  } else {\r\n    dispatch(showSnackbarError('Något gick fel vid hämting Quiz.'));\r\n  }\r\n}\r\n\r\n/* Add collection */\r\nexport const createCollectionAction = (data, dispatch) => async (dispatch, getState) => {\r\n  const token = localStorage.getItem('token');\r\n\r\n  if(!token || token === 'undefined'){\r\n      return;\r\n  }\r\n\r\n  const rawResponse = await fetch('https://stark-ocean-61611.herokuapp.com/api/question-collection/add', {\r\n    method: 'POST',\r\n    headers: {\r\n      'Accept': 'application/json',\r\n      'Content-Type': 'application/json',\r\n      'Authorization': token,\r\n    },\r\n    body: JSON.stringify (\r\n        data\r\n    )\r\n  });\r\n\r\n  const response = await rawResponse.json();\r\n  if(response.success){\r\n\r\n      if(response.content){\r\n\r\n          /* Add to store */\r\n          dispatch(addToCollection(response.content));\r\n\r\n          /* Implement snackbar here? */\r\n          dispatch(showSnackbarMessage('Frågesamlingen sparades'));\r\n      }\r\n\r\n  } else {\r\n    dispatch(showSnackbarError('Något gick fel vid skapande av Quiz.'));\r\n  }\r\n}\r\n\r\n/* Update collection */\r\nexport const updateCollectionAction = (data, dispatch) => async (dispatch, getState) => {\r\n  const token = localStorage.getItem('token');\r\n\r\n  if(!token || token === 'undefined'){\r\n      return;\r\n  }\r\n\r\n  const url = 'https://stark-ocean-61611.herokuapp.com/api/question-collection/update/' + data._id;\r\n  const rawResponse = await fetch(url, {\r\n    method: 'PUT',\r\n    headers: {\r\n      'Accept': 'application/json',\r\n      'Content-Type': 'application/json',\r\n      'Authorization': token,\r\n    },\r\n    body: JSON.stringify (\r\n      data\r\n    )\r\n  });\r\n\r\n  const response = await rawResponse.json();\r\n  if(response.success){\r\n\r\n    if(response.content){\r\n\r\n        /* Update in store (Updating directly, since api sends back old data) */\r\n        dispatch(updateCollection(data));\r\n\r\n        /* Implement snackbar here? */\r\n        dispatch(showSnackbarMessage('Frågesamlingen uppdaterades'));\r\n\r\n    } else {\r\n        dispatch(showSnackbarError('Inget svar ifrån databasen'));\r\n    }\r\n\r\n  } else {\r\n    dispatch(showSnackbarError('Något gick fel vid uppdaterande av Quiz.'));\r\n  }\r\n}\r\n\r\n/* Remove collection */\r\nexport const removeCollectionAction = (id, dispatch) => async (dispatch, getState) => {\r\n  const token = localStorage.getItem('token');\r\n\r\n  if(!token || token === 'undefined'){\r\n      return;\r\n  }\r\n\r\n  const url = 'https://stark-ocean-61611.herokuapp.com/api/question-collection/delete/' + id;\r\n  const rawResponse = await fetch(url, {\r\n    method: 'DELETE',\r\n    headers: {\r\n      'Accept': 'application/json',\r\n      'Content-Type': 'application/json',\r\n      'Authorization': token,\r\n    }\r\n  });\r\n\r\n  const response = await rawResponse.json();\r\n\r\n  if(response.success){\r\n\r\n      if(response.content){\r\n\r\n          /* Remove from store */\r\n          dispatch(deleteCollection(response.content));\r\n\r\n          /* Implement snackbar here? */\r\n          dispatch(showSnackbarMessage('Frågesamlingen raderades'));\r\n\r\n      } else {\r\n          dispatch(showSnackbarError('Frågesamlingen existerar inte'));\r\n      }\r\n\r\n\r\n  } else {\r\n    dispatch(showSnackbarError('Något gick fel vid radering av Quiz.'));\r\n  }\r\n}\r\n","import React, { Component, Fragment } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\n/* Import CSS */\r\nimport './css/adminpanel.css';\r\n\r\n/* Material UI */\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport Hashids from 'hashids';\r\n\r\n/* Actions */\r\nimport { getQuestionCollections } from '../actions/questionCollectionActions.js';\r\nimport { setUser } from '../actions/authActions.js';\r\nimport { createRoomAction } from '../actions/roomActions.js';\r\n// import { showSnackbarMessage } from '../actions/errorHandlingActions';\r\n/* Komponenter */\r\nimport Menu from './Menu.js';\r\n\r\n/* Denna komponent visar vilka olika quiz man kan starta samt \"Skapa ny quiz\" */\r\nconst styles = theme => ({\r\n  input: {\r\n    display: 'none',\r\n  },\r\n  card: {\r\n    maxWidth: 345,\r\n    marginRight: 15,\r\n    marginBottom: 15,\r\n    minWidth: 295\r\n  },\r\n  media: {\r\n    height: 140,\r\n  },\r\n  button: {\r\n    marginBottom: 20\r\n  }\r\n});\r\n\r\n\r\nclass Adminpanel extends Component {\r\n  constructor(props){\r\n    super(props)\r\n    this.state = {\r\n      update: false\r\n    }\r\n    const { collectionFetched, dispatch, history } = props\r\n\r\n\r\n    if ( !collectionFetched ){\r\n      // hämta data.\r\n      dispatch(getQuestionCollections());\r\n    }\r\n\r\n    let auth = JSON.parse(localStorage.getItem('auth'));\r\n    if(auth && auth.token && auth.token.length > 10){\r\n          dispatch(setUser(JSON.parse(localStorage.getItem('auth'))));\r\n    } else {\r\n        history.push('/admin');\r\n    }\r\n  }\r\n\r\n  createRoom = quiz => {\r\n    const { dispatch, history } = this.props;\r\n    const roomId = createRoomId(this.props.auth.name, quiz._id);\r\n    if (quiz.numberOfQuestions === 0) {\r\n      // dispatch(showSnackbarMessage('Samlingen saknar frågor'));\r\n      return null;\r\n    }\r\n    const room = {\r\n      roomId,\r\n      quiz,\r\n      currentQuestion: 0,\r\n      createdBy: this.props.auth.name,\r\n      active: true,\r\n      openForAnswer: false,\r\n      name: roomId,\r\n      created: Date.now()\r\n    }\r\n\r\n    dispatch(createRoomAction({history, room}));\r\n\r\n  }\r\n\r\n  createQuiz = () => {\r\n      const { history } = this.props;\r\n      history.push('/admin/collection/');\r\n  }\r\n\r\n  editCollection = (collectionId) => {\r\n    const { history } = this.props;\r\n    history.push(`/admin/collection/${collectionId}`);\r\n  }\r\n\r\n  renderCards = () =>{\r\n    const { questionCollections, classes } = this.props;\r\n    if ( Object.keys(questionCollections).length === 0 )\r\n      return null;\r\n\r\n    return Object.keys(questionCollections).map(xKey => {\r\n      const x = questionCollections[xKey];\r\n      x.numberOfQuestions = x.questions ? Object.keys(x.questions).length : 0;\r\n      return (\r\n        <Card key={x._id} className={classes.card}>\r\n          <CardActionArea>\r\n            <CardMedia\r\n              className={classes.media}\r\n              image={x.imgUrl}\r\n              title={x.title}\r\n            />\r\n            <CardContent>\r\n              <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                {x.title}\r\n              </Typography>\r\n              <Typography component=\"p\">\r\n                {x.description}\r\n              </Typography>\r\n              <Typography variant=\"caption\" style={{marginTop: '5px'}}>\r\n                Frågor {x.numberOfQuestions}st\r\n              </Typography>\r\n            </CardContent>\r\n          </CardActionArea>\r\n          <CardActions>\r\n            <Button size=\"small\" color=\"primary\" onClick={ e => {\r\n              this.createRoom(x);\r\n              }}>\r\n              Starta\r\n            </Button>\r\n            <Button size=\"small\" color=\"primary\" onClick={ e => this.editCollection(xKey) }>\r\n              Redigera\r\n            </Button>\r\n          </CardActions>\r\n        </Card>)\r\n    });\r\n  }\r\n\r\n  render() {\r\n\r\n    const { classes, history } = this.props;\r\n\r\n    const cardList = this.renderCards();\r\n\r\n    return (\r\n      <Fragment>\r\n        <Menu history={ history } adminPanel={true} auth={this.props.auth}/>\r\n        <div className=\"adminpanel\">\r\n        <Button variant=\"contained\" color=\"primary\" className={classes.button} onClick={this.createQuiz}>\r\n        Skapa quiz\r\n        </Button>\r\n          <div>\r\n            <div className=\"listDiv\">\r\n              {cardList}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </Fragment>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nlet mapStateToProps = state => ({\r\n    value: state.value,\r\n    auth: state.auth,\r\n    questionCollections: state.questionCollections.data,\r\n    collectionFetched: state.questionCollections.fetched,\r\n});\r\n\r\n\r\nfunction createRoomId(){\r\n  let code = Math.ceil(Date.now() - 1539264714045);\r\n  let hashids = new Hashids('begame'),\r\n  id = hashids.encode(code);\r\n  return id;\r\n}\r\n\r\nexport default connect(mapStateToProps)(withStyles(styles)(Adminpanel));\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\n/* Import CSS */\r\nimport './css/project.css';\r\n\r\n/* Material UI */\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\nimport ErrorHandling from './ErrorHandling';\r\nimport { showSnackbarError, showSnackbarMessage } from '../actions/errorHandlingActions.js';\r\n\r\n/* Denna komponent visar vilka olika quiz man kan starta samt \"Skapa ny quiz\" */\r\nconst styles = theme => ({\r\n  input: {\r\n    display: 'none',\r\n  },\r\n  card: {\r\n    maxWidth: 245,\r\n    marginRight: 15,\r\n    marginBottom: 15,\r\n    minWidth: 245\r\n  },\r\n  media: {\r\n    height: 140,\r\n  },\r\n  root: {\r\n    ...theme.mixins.gutters(),\r\n    paddingTop: theme.spacing.unit * 2,\r\n    paddingBottom: theme.spacing.unit * 2,\r\n    width: 250,\r\n    margin: 'auto'\r\n  },\r\n  stepper: {\r\n    ...theme.mixins.gutters(),\r\n    paddingTop: theme.spacing.unit * 2,\r\n    paddingBottom: theme.spacing.unit * 2,\r\n    width: 725,\r\n    margin: 'auto'\r\n  },\r\n});\r\n\r\n\r\nclass Project extends Component {\r\n\r\n  state = {\r\n    open: false,\r\n    inputname: '',\r\n    pw1: '',\r\n    pw2: ''\r\n  };\r\n\r\n  handleClickOpen = () => {\r\n    this.setState({ open: true });\r\n  };\r\n\r\n  handleClose = () => {\r\n    this.setState({ open: false });\r\n  };\r\n\r\n  handleRegister = () => {\r\n    if(!this.state.pw1.length || !this.state.pw2.length || !this.state.inputname.length){\r\n      this.props.dispatch(showSnackbarError('Tomma fält, vänligen försök igen'));\r\n    } else if(this.state.pw1.length < 6){\r\n      this.props.dispatch(showSnackbarError('Lösenordet är för kort'));\r\n    } else if(this.state.pw1 !== this.state.pw2){\r\n      this.props.dispatch(showSnackbarError('Lösenorden matchar inte'));\r\n    } else {\r\n      this.setState({ open: false });\r\n\r\n      fetch('https://stark-ocean-61611.herokuapp.com/api/signup', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          password: this.state.pw1,\r\n          name: this.state.inputname,\r\n        })\r\n      })\r\n      .then(response => {\r\n        return response.json();\r\n      })\r\n      .then(json => {\r\n        this.props.dispatch(showSnackbarMessage(`Grattis! Konto skapat.`));\r\n      })\r\n      .catch(err => console.log(err));\r\n    }\r\n  };\r\n\r\n  handleChange = (event, type) => {\r\n    this.setState({ [type]: event.target.value });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n            <div>\r\n              <ErrorHandling />\r\n              <Button onClick={this.handleClickOpen} size='small' style={{fontSize: 12, color: '#999'}}>Skapa konto</Button>\r\n              <Dialog\r\n                open={this.state.open}\r\n                onClose={this.handleClose}\r\n                aria-labelledby=\"form-dialog-title\"\r\n              >\r\n                <DialogTitle id=\"form-dialog-title\">Skapa konto</DialogTitle>\r\n                <DialogContent style={{width: 400, paddingBottom: 10}}>\r\n                  <DialogContentText style={{fontSize: 13, marginBottom: 20}}>\r\n                    För att kunna skapa ett quiz behöver du skapa ett konto.\r\n                  </DialogContentText>\r\n                  <TextField\r\n                    onChange={e => { this.handleChange(e, 'inputname') } }\r\n                    variant='outlined'\r\n                    margin=\"dense\"\r\n                    id=\"name\"\r\n                    label=\"Användarnamn\"\r\n                    type=\"email\"\r\n                    fullWidth\r\n                    InputLabelProps={{\r\n                      shrink: true,\r\n                    }}\r\n                  />\r\n                  <TextField\r\n                    onChange={e => { this.handleChange(e, 'pw1') } }\r\n                    variant='outlined'\r\n                    margin=\"dense\"\r\n                    id=\"pw1\"\r\n                    label=\"Lösenord\"\r\n                    type=\"password\"\r\n                    fullWidth\r\n                    InputLabelProps={{\r\n                      shrink: true,\r\n                    }}\r\n                  />\r\n                  <TextField\r\n                    onChange={e => { this.handleChange(e, 'pw2') } }\r\n                    variant='outlined'\r\n                    margin=\"dense\"\r\n                    id=\"pw2\"\r\n                    label=\"Upprepa lösenord\"\r\n                    type=\"password\"\r\n                    fullWidth\r\n                    InputLabelProps={{\r\n                      shrink: true,\r\n                    }}\r\n                  />\r\n                </DialogContent>\r\n                <DialogActions>\r\n                  <Button onClick={this.handleClose} color=\"secondary\">\r\n                    Avbryt\r\n                  </Button>\r\n                  <Button onClick={this.handleRegister} color=\"secondary\">\r\n                    Registrera\r\n                  </Button>\r\n                </DialogActions>\r\n              </Dialog>\r\n            </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nlet mapStateToProps = state => ({\r\n    value: state.value,\r\n    snackbarOpen: state.errorHandling.snackbarOpen,\r\n    error: state.errorHandling.error,\r\n    message: state.errorHandling.message\r\n});\r\n\r\nexport default connect(mapStateToProps)(withStyles(styles, { withTheme: true })(Project));\r\n","import React, { Component } from 'react';\r\nimport { compose } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\n\r\n/* Actions */\r\nimport { showSnackbarError } from '../actions/errorHandlingActions';\r\nimport { loginAsAdmin, setUser } from '../actions/authActions.js'\r\n\r\n/* Components */\r\nimport Menu from './Menu.js';\r\nimport ErrorHandling from './ErrorHandling.js';\r\nimport Register from './Register'\r\n\r\nconst backgroundImage = require('../resources/background_gm.jpg');\r\nconst logo = require('../resources/logo_gm.png');\r\n\r\nconst styles = () => ({\r\n  main: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    minHeight: 'calc(100vh - 50px)',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    backgroundImage: `linear-gradient(to top, rgba(0, 0, 0, .9), rgba(0, 0, 0, .9)), url(${backgroundImage})`,\r\n    backgroundColor: '#fafafa',\r\n    backgroundSize: 'cover',\r\n  },\r\n  container: {\r\n    padding: 40,\r\n    marginTop: -70,\r\n    paddingTop: 30,\r\n  },\r\n  margin: {\r\n    width: 350,\r\n    textAlign: 'center',\r\n  },\r\n  welcome: {\r\n    textAlign: 'center',\r\n  },\r\n  login: {\r\n    textAlign: 'center',\r\n    marginBottom: 20,\r\n  },\r\n  copyright: {\r\n    textAlign: 'center',\r\n    fontSize: 11,\r\n    marginTop: -70,\r\n    color: '#fff',\r\n  },\r\n  logo: {\r\n    marginTop: -100,\r\n    marginBottom: 30,\r\n    zIndex: 1\r\n  },\r\n  inputFocused: {\r\n    width: '40%',\r\n    borderColor: '#80bdff',\r\n    boxShadow: '0 0 0 0.2rem rgba(0,123,255,.25)',\r\n    backgroundColor: \"#00FF00\",\r\n  },\r\n});\r\n\r\nclass AdminLogin extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      loading: false,\r\n      name: '',\r\n      password: '',\r\n      jwt: '',\r\n    };\r\n  }\r\n  componentWillMount() {\r\n    const { history, dispatch } = this.props;\r\n    const jwt = localStorage.getItem('token');\r\n    const userData = JSON.parse(localStorage.getItem('auth'));\r\n\r\n    if( userData )\r\n      dispatch(setUser(JSON.parse(localStorage.getItem('auth'))));\r\n\r\n    if (jwt && jwt.length > 10) {\r\n      this.setState( { jwt: jwt } );\r\n       dispatch(setUser(JSON.parse(localStorage.getItem('auth'))));\r\n       // console.log(\"JWT found redirecting view\", jwt);\r\n      history.push(`/admin/home`);\r\n    }\r\n  }\r\n\r\n// staten sätts varje gång komponenten monteras.. böver ej sättas nedan.\r\n  // componentWillUnmount() {\r\n  //   console.log('This state is: ', this.state);\r\n  //   this.setState({\r\n  //       name: '',\r\n  //       password: '',\r\n  //       jwt: '',\r\n  //   });\r\n  //   console.log('This state now is: ', this.state);\r\n  // }\r\n\r\n  handleChange = name => (event) => {\r\n    this.setState({\r\n      [name]: event.target.value,\r\n    });\r\n  };\r\n\r\n  validation = () => {\r\n    const { password, name } = this.state;\r\n    const { dispatch } = this.props;\r\n    if (!name || !password) {\r\n      dispatch(showSnackbarError('Användarnamn och lösenord krävs.'));\r\n    } else {\r\n      this.login({name, password});\r\n    }\r\n  }\r\n\r\n  login = (user) => {\r\n    const { dispatch, history } = this.props;\r\n    const data = {\r\n      history,\r\n      user,\r\n    }\r\n    dispatch(loginAsAdmin( data ));\r\n  }\r\n\r\n\r\n  pressEnterToLogin = (e) => {\r\n    let key = e.wich;\r\n    if (key === 13) {\r\n      this.validation();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { loading, username } = this.state;\r\n    const { classes, history } = this.props;\r\n\r\n    return (\r\n      <div>\r\n      <Menu history={history} username={username} isAdmin={true} />\r\n        {loading && <LinearProgress thickness={2} color='secondary' />}\r\n        <div className={classes.main}>\r\n        <img src={logo} alt='Begame' className={classes.logo} width=\"250px\"/>\r\n          <Paper className={classes.container}>\r\n          <Typography variant='h6' className={classes.welcome}>Välkommen!</Typography>\r\n         <Typography variant=\"subtitle1\" className={classes.login}>Logga in med användarnamn och lösenord</Typography>\r\n            <div className={classes.margin}>\r\n              <TextField\r\n                type=\"text\"\r\n                onChange={this.handleChange('name')}\r\n                value={this.state.name}\r\n                id='input-with-icon-grid1'\r\n                label='Användarnamn'\r\n                margin='dense'\r\n                variant='outlined'\r\n                fullWidth\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n                InputProps={{\r\n                  style: {\r\n                    fontSize: 13,\r\n                    height: 45,\r\n                  },\r\n                }}\r\n              />\r\n            </div>\r\n            <div className={classes.margin}>\r\n              <TextField\r\n                type=\"password\"\r\n                onChange={this.handleChange('password')}\r\n                value={this.state.password}\r\n                id='input-with-icon-grid2'\r\n                label='Lösenord'\r\n                margin='dense'\r\n                variant='outlined'\r\n                fullWidth\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n                InputProps={{\r\n                  style: {\r\n                    fontSize: 13,\r\n                    height: 45,\r\n                  },\r\n                }}\r\n              />\r\n            </div>\r\n            <div className={classes.margin}>\r\n              <Button\r\n                style={{ marginBottom: 20, marginTop: 10 }}\r\n                variant='contained'\r\n                color='secondary'\r\n                fullWidth\r\n                onClick={this.validation}\r\n                disabled={loading}\r\n                size='large'\r\n              >\r\n              Logga in\r\n              </Button>\r\n            </div>\r\n            <div className={classes.margin}>\r\n              <Register />\r\n            </div>\r\n          </Paper>\r\n        </div>\r\n        <Typography className={classes.copyright}>© Copyright 2018 | All Rights Reserved | Begame</Typography>\r\n        <ErrorHandling />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = store => ({\r\n  snackbarOpen: store.errorHandling.snackbarOpen,\r\n  error: store.errorHandling.error,\r\n  message: store.errorHandling.message,\r\n});\r\n\r\nexport default compose(withStyles(styles), connect(mapStateToProps))(AdminLogin);\r\n","import React,{ Component } from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Typography from '@material-ui/core/Typography';\r\n// import Button from '@material-ui/core/Button';\r\nimport People from '@material-ui/icons/People';\r\nimport { connect } from 'react-redux';\r\nimport { getUserInRoom } from '../actions/userActions.js';\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    width: '100%',\r\n    maxWidth: 250,\r\n    height: '95vh',\r\n    backgroundColor: '#512DA8',\r\n    float: 'left',\r\n  },\r\n  userText: {\r\n    color: '#FAFAFA',\r\n    fontSize: '1rem',\r\n    fontWeight: '400'\r\n  },\r\n  pointsText: {\r\n    color: '#FAFAFA',\r\n    fontWeight: '400'\r\n  },\r\n  onlineText: {\r\n    color: '#FAFAFA',\r\n    fontWeight: 'bolder',\r\n    fontSize: 15\r\n  },\r\n  rightIcon: {\r\n    color: '#FAFAFA',\r\n  },\r\n  listitem: {\r\n    paddingTop: 0,\r\n  }\r\n});\r\n\r\n\r\n\r\nclass ActiveUsers extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    const { fetched, dispatch, roomId } = props;\r\n\r\n    if (!fetched && roomId){\r\n      dispatch(getUserInRoom({roomId,failMsg: false}))\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.interval = setInterval(() => {this.getNewUserData(false) }, 2000);\r\n  }\r\n  componentWillUnmount() {\r\n    clearInterval(this.interval);\r\n  }\r\n\r\n  renderActiveUsers = () => {\r\n    const { classes, users } = this.props;\r\n    if (!users){\r\n      return ( <div>User is missing</div>)\r\n    }\r\n    return users.map( user => (\r\n      <ListItem className={classes.listitem} key={user['_id']}>\r\n        <ListItemText\r\n          disableTypography\r\n          primary={<Typography type=\"body2\" className={classes.userText}>{user.name}</Typography>}\r\n          secondary={<Typography type=\"body2\" className={classes.pointsText}>{user.points}</Typography>} />\r\n      </ListItem>\r\n    ));\r\n  }\r\n\r\n  getNewUserData = (failMsg) => {\r\n    const { dispatch, roomId } = this.props;\r\n\r\n    if (roomId){\r\n      dispatch(getUserInRoom({roomId,failMsg}))\r\n    }\r\n  }\r\n\r\n  render(){\r\n    const { classes, users, room } = this.props;\r\n    const gameMaster = room && room.createdBy;\r\n    const userList = this.renderActiveUsers();\r\n    return (\r\n      <div className={classes.root}>\r\n        <List>\r\n        <ListItem className={classes.listitem}>\r\n        <People className={classes.rightIcon} />\r\n          <ListItemText\r\n            disableTypography\r\n            primary={<Typography type=\"body2\" className={classes.onlineText}>{users.length || 0}</Typography>} />\r\n        </ListItem>\r\n        <ListItem className={classes.listitem}>\r\n          <ListItemText\r\n            disableTypography\r\n            primary={<Typography type=\"body2\" className={classes.userText}>{gameMaster}</Typography>}\r\n            secondary={<Typography type=\"body2\" className={classes.pointsText}>GAME MASTER</Typography>} />\r\n        </ListItem>\r\n          { userList }\r\n        </List>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nlet mapStateToProps = store => ({\r\n    users: store.users.data,\r\n    fetched: store.users.fetched,\r\n    room: store.activeRoom.data\r\n});\r\n\r\n\r\nexport default connect(mapStateToProps)(withStyles(styles)(ActiveUsers));\r\n","import React,{ Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\nimport TextField from '@material-ui/core/TextField';\r\n// import Dialog from '@material-ui/core/Dialog';\r\n// import DialogActions from '@material-ui/core/DialogActions';\r\n// import DialogContent from '@material-ui/core/DialogContent';\r\n// import DialogContentText from '@material-ui/core/DialogContentText';\r\n// import DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    marginBottom: 20\r\n  },\r\n  textField: {\r\n   marginTop: 3,\r\n   maxHeight: 50,\r\n   marginLeft: theme.spacing.unit,\r\n   marginRight: theme.spacing.unit,\r\n   width: 100,\r\n },\r\n button: {\r\n   marginTop: 2,\r\n   maxHeight: 50,\r\n   width: 100,\r\n   marginLeft: theme.spacing.unit,\r\n   marginRight: theme.spacing.unit,\r\n },\r\n wrapperButtons:{\r\n   marginTop: 10,\r\n   display: 'flex',\r\n   justifyContent: 'auto',\r\n   alignItem: 'center',\r\n   flexDirection: 'row',\r\n },\r\n wrapperChip: {\r\n   display: 'flex',\r\n   alignItems: 'center',\r\n   marginLeft: '100',\r\n }\r\n});\r\n\r\nclass TimerBar extends Component {\r\n  state = {\r\n    completed: 0,\r\n    time: 10,\r\n    currentTime: 0,\r\n    inProgress: false,\r\n    lockStart: false,\r\n    showEndTime: false,\r\n    reseted: false,\r\n    open: true,\r\n  };\r\n\r\n  componentWillUnmount() {\r\n    clearInterval(this.timer);\r\n  }\r\n\r\n  progress = () => {\r\n    let { completed, time, currentTime } = this.state;\r\n    completed += (100/time)\r\n    currentTime += 1;\r\n    if (completed > 100) { // time is ended.\r\n      this.setState({ completed: 0, inProgress: false, currentTime:0, lockStart: false, showEndTime:true, open: true, reseted: false, });\r\n      clearInterval(this.timer);\r\n      this.props.questionOpenForAnswer(false);\r\n      this.props.showRightAnswer(true);\r\n    } else { // still in progress\r\n      this.setState({ completed,currentTime, inProgress: true });\r\n    }\r\n  };\r\n\r\n\r\n  handleChange = name => event => {\r\n    this.setState({\r\n      [name]: event.target.value,\r\n    });\r\n  };\r\n\r\n  start = () => {\r\n    const { lockStart, inProgress, reseted } = this.state;\r\n    if (!lockStart){\r\n      // if quest is reseted we dont want to change question\r\n      if ( !inProgress && !reseted ) {\r\n        this.props.questionOpenForAnswer(true); // open current quetsion for answers\r\n        this.props.showRightAnswer(false); // removes earlier answer from state\r\n        this.props.nextQuest(); // change to next question\r\n      }\r\n\r\n\r\n      this.setState({lockStart: true, showEndTime:false }, ()=>{\r\n        this.timer = setInterval(this.progress, 1000);\r\n      })\r\n    }\r\n  }\r\n\r\n  stop = () =>{\r\n    this.setState({lockStart: false})\r\n    clearInterval(this.timer);\r\n  }\r\n\r\n  clearTimer = () => {\r\n    clearInterval(this.timer);\r\n\r\n    this.setState({ completed: 0, inProgress: false, currentTime:0, lockStart:false, showEndTime: false, reseted: true });\r\n  }\r\n\r\n  handleClose = () => {\r\n    this.setState({ open: false });\r\n  };\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    // const { inProgress, lockStart, showEndTime, open } = this.state;\r\n    const { inProgress, lockStart } = this.state;\r\n    return (\r\n      <div>\r\n        <div className={classes.root}>\r\n          <LinearProgress variant=\"determinate\" value={this.state.completed} />\r\n        </div>\r\n        <div className={classes.wrapperButtons}>\r\n          {!lockStart && <Button variant=\"contained\" color=\"primary\" className={classes.button} onClick={this.start}>\r\n            { inProgress ? 'Fortsätt': 'Start'}\r\n          </Button>}\r\n          { lockStart && <Button variant=\"contained\" color=\"primary\" className={classes.button} onClick={this.stop}>\r\n            Stopp\r\n          </Button>}\r\n          <Button color=\"primary\" variant=\"outlined\" className={classes.button} onClick={this.clearTimer}>\r\n            Återställ\r\n          </Button>\r\n\r\n        {inProgress &&\r\n          <TextField\r\n            id=\"outlined-number\"\r\n            label=\"Tid i sekunder\"\r\n            value={ this.state.time - this.state.currentTime }\r\n            type=\"number\"\r\n            className={classes.textField}\r\n            InputLabelProps={{\r\n              shrink: true,\r\n            }}\r\n            margin=\"normal\"\r\n            variant=\"outlined\"\r\n          />\r\n        }\r\n\r\n        {!inProgress &&\r\n          <TextField\r\n            id=\"outlined-number\"\r\n            label=\"Tid i sekunder\"\r\n            value={this.state.time}\r\n            onChange={this.handleChange('time')}\r\n            type=\"number\"\r\n            className={classes.textField}\r\n            InputLabelProps={{\r\n            shrink: true,\r\n            }}\r\n            margin=\"normal\"\r\n            variant=\"outlined\"\r\n          />\r\n        }\r\n        </div>\r\n        {/* { open && showEndTime &&\r\n        <Dialog\r\n          style={{ width: 600, marginLeft: 750, marginTop: -100 }}\r\n          open={this.state.open}\r\n          onClose={this.handleClose}\r\n          aria-labelledby=\"alert-dialog-title\"\r\n          aria-describedby=\"alert-dialog-description\"\r\n        >\r\n          <DialogTitle id=\"alert-dialog-title\">RÄTT SVAR ÄR B</DialogTitle>\r\n          <DialogContent>\r\n            <DialogContentText id=\"alert-dialog-description\">\r\n            Lizards are a widespread group of squamate reptiles, with over 6,000 species, ranging across all continents except Antarctica\r\n            </DialogContentText>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={this.handleClose} color=\"primary\">\r\n              STÄNG\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      } */}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nTimerBar.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(TimerBar);\r\n","import React, { Component, Fragment } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { compose } from 'redux';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { showSnackbarMessage } from '../actions/errorHandlingActions';\r\nimport { getRoomFromDb, updateRoomInDb } from '../actions/roomActions'\r\n\r\n//Material UI\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\n//Imported components\r\nimport ActiveUsers from './ActiveUsers';\r\nimport TimerBar from './TimerBar';\r\nimport Menu from './Menu';\r\nimport ErrorHandling from './ErrorHandling.js';\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    ...theme.mixins.gutters(),\r\n    paddingTop: theme.spacing.unit * 2,\r\n    paddingBottom: theme.spacing.unit * 2,\r\n    width: 450,\r\n    margin: '50px auto'\r\n  },\r\n  card: {\r\n    maxWidth: 380,\r\n    marginBottom: 30\r\n  },\r\n  cardRight: {\r\n    maxWidth: 380,\r\n    marginBottom: 30,\r\n    backgroundColor: '#a1c45a',\r\n  },\r\n  cardAction: {\r\n    width: 350,\r\n    maxWidth: 380,\r\n  },\r\n  orangeAvatar: {\r\n    color: '#fff',\r\n    backgroundColor: '#573697',\r\n    margin: '0px auto',\r\n    marginBottom: 10,\r\n  },\r\n});\r\n\r\nclass Room extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      id: props.match.params.id,\r\n      showTimer: true,\r\n      rightAnswer: null,\r\n    }\r\n\r\n    const roomId = (props.match && props.match.params && props.match.params.id) || false;\r\n    if (roomId)\r\n    props.dispatch(getRoomFromDb(roomId))\r\n\r\n  }\r\n\r\n  componentWillMount(){\r\n    const { dispatch } = this.props;\r\n    dispatch(showSnackbarMessage(`Välkommen till rum ${this.state.id}`));\r\n  }\r\n\r\n\r\n  selectedAnswer = (selected, correctAnswer) => {\r\n    const isRight = selected === correctAnswer;\r\n    if ( isRight){\r\n      console.log('Rätt svar!');\r\n    }else {\r\n      console.log('Fel svar!');\r\n    }\r\n  }\r\n\r\n\r\n  createAnswerButtons = (answers, correctAnswer) => {\r\n    const { classes } = this.props;\r\n    const { rightAnswer } = this.state;\r\n    const listAlpah = ['a', 'b', 'c','d'];\r\n\r\n    return Object.values(answers).map( (item, index ) => (\r\n      <Fragment key={index}>\r\n        <Card className={rightAnswer === listAlpah[index] ? classes.cardRight : classes.card } onClick={() => this.selectedAnswer(listAlpah[index], correctAnswer)} raised={this.state.selectedA}>\r\n          <CardActionArea className={classes.cardAction}>\r\n            <CardContent>\r\n              <Avatar className={classes.orangeAvatar}>{listAlpah[index].toUpperCase()}</Avatar>\r\n              <Typography component=\"p\">\r\n                { item }\r\n              </Typography>\r\n            </CardContent>\r\n          </CardActionArea>\r\n        </Card>\r\n      </Fragment>\r\n    ))\r\n  }\r\n\r\n\r\n  renderQuestion = () => {\r\n    const { room, classes } = this.props;\r\n    const { quiz } = room || false;\r\n    const { questions } = quiz || false;\r\n    const title = room && room.quiz && room.quiz.title;\r\n    const description = room && room.quiz && room.quiz.description;\r\n\r\n    if ( !questions )\r\n      return (\r\n        <Paper className={classes.root} elevation={1}>\r\n          <Typography variant=\"h5\" component=\"h3\">\r\n          {title}\r\n          </Typography>\r\n          <Typography component=\"p\">\r\n          {description}\r\n          </Typography>\r\n        </Paper>\r\n      )\r\n\r\n    let currentQuestion  = room && room.currentQuestion;\r\n\r\n    if (currentQuestion === 0)\r\n      return (\r\n        <Paper className={classes.root} elevation={1}>\r\n          <Typography variant=\"h5\" component=\"h3\">\r\n          {title}\r\n          </Typography>\r\n          <Typography component=\"p\">\r\n          {description}\r\n          </Typography>\r\n        </Paper>\r\n      )\r\n\r\n    if (currentQuestion === -1) {\r\n      if( this.state.showTimer)\r\n        // this.setState({showTimer: false})\r\n      return (<div><Typography variant=\"h3\" gutterBottom>SLUT</Typography></div>)\r\n    } else if (!this.state.showTimer){\r\n      // this.setState({showTimer:true})\r\n    }\r\n\r\n    const selectedQuestion = Object.values(questions).filter(question => question.order === currentQuestion)[0];\r\n    const answer = this.createAnswerButtons(selectedQuestion.answers, selectedQuestion.correctAnswer)\r\n\r\n    return (\r\n      <Fragment>\r\n        <h1 style={{fontSize: '3.5em', color: '#573697', fontWeight: 'bold', marginBottom: 100}}>{selectedQuestion.question}</h1>\r\n        <div style={{display: 'flex', justifyContent: 'space-between', marginBottom: 50, flexWrap: 'wrap'}}>\r\n          {answer}\r\n        </div>\r\n      </Fragment>)\r\n  }\r\n\r\n  // switches to next question in timer.\r\n  nextQuestion = () =>{\r\n    const roomIdInDb = this.props.room['_id'];\r\n    let { currentQuestion, quiz } = this.props.room\r\n    currentQuestion += 1;\r\n\r\n    // if we got to the end of questions we set it to -1 to display end\r\n    if (Object.keys(quiz.questions).length < currentQuestion ){\r\n      currentQuestion = -1;\r\n    }\r\n\r\n    const data = {\r\n      roomIdInDb,\r\n      update: {\r\n        currentQuestion\r\n      }\r\n    }\r\n    this.props.dispatch(updateRoomInDb(data));\r\n  }\r\n\r\n  // open question for answer\r\n  questionOpenForAnswer = (isOpen) =>{\r\n    const { dispatch } = this.props;\r\n    const roomIdInDb = this.props.room['_id'];\r\n      dispatch(updateRoomInDb({update: {openForAnswer: isOpen}, roomIdInDb}))\r\n  }\r\n\r\n  showRightAnswer = (showIt) => {\r\n    if ( showIt ){\r\n      const { room } = this.props;\r\n      const { currentQuestion } = room;\r\n      const { questions } = room.quiz\r\n      const filtered = Object.values(questions).filter(question => question.order === currentQuestion)[0]\r\n      const { correctAnswer } = filtered\r\n\r\n      this.setState({rightAnswer: correctAnswer})\r\n    } else {\r\n      this.setState({rightAnswer: null})\r\n    }\r\n  }\r\n  showTimer = () => {\r\n    const { room } = this.props;\r\n\r\n    let currentQuestion  = room && room.currentQuestion ? room.currentQuestion : 0;\r\n\r\n    if (currentQuestion === 0) {\r\n      return true\r\n    } else if( currentQuestion === -1){\r\n      return false\r\n    } else {\r\n      return true;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { history } = this.props;\r\n\r\n\r\n    const viewQuest = this.renderQuestion();\r\n    const showTime = this.showTimer();\r\n    return (\r\n      <Fragment>\r\n        <Menu roomId={this.state.id} history={history}/>\r\n        <ActiveUsers roomId={this.state.id}/>\r\n        <div style={{width: 800, height: 300, margin: '100px auto', textAlign: 'center' }}>\r\n          {viewQuest}\r\n          {showTime && <TimerBar nextQuest={this.nextQuestion}  questionOpenForAnswer={this.questionOpenForAnswer} showRightAnswer={this.showRightAnswer}/>}\r\n        </div>\r\n      <ErrorHandling />\r\n      </Fragment>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nlet mapStateToProps = store => ({\r\n    snackbarOpen: store.errorHandling.snackbarOpen,\r\n    error: store.errorHandling.error,\r\n    message: store.errorHandling.message,\r\n    room: store.activeRoom.data,\r\n    fetched: store.activeRoom.fetched,\r\n});\r\n\r\nexport default compose(withStyles(styles), connect(mapStateToProps))(Room);\r\n","import React,{ Component } from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport { showSnackbarError, showSnackbarMessage } from '../actions/errorHandlingActions';\r\nimport { connect } from 'react-redux';\r\n\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nconst styles = theme => ({\r\n  container: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n  },\r\n  textField: {\r\n    marginLeft: theme.spacing.unit,\r\n    marginRight: theme.spacing.unit,\r\n    width:'90%',\r\n  },\r\n  textFieldWithButton: {\r\n    width:'75%',\r\n  },\r\n  textFieldDiv: {\r\n    width:'103%',\r\n  },\r\n  textFieldButton: {\r\n    margin: '20px 20px'\r\n  },\r\n  button: {\r\n    marginRight: 15,\r\n  }\r\n});\r\n\r\nconst listAlpah = ['a', 'b', 'c', 'd'];\r\n\r\nclass AddQuest extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      question: '',\r\n      answers: {\r\n        a: '',\r\n        b: '',\r\n    },\r\n      correctAnswer: null\r\n    };\r\n  };\r\n\r\n  handleChange = (event, type, inputKey) => {\r\n    const value = event.target.value\r\n    if (type === 'answers'){\r\n      const answers = this.state.answers;\r\n      answers[inputKey] = value;\r\n      this.setState({ answers: answers });\r\n\r\n    } else if (type === 'question') {\r\n      this.setState({ question: value });\r\n    }\r\n  }\r\n\r\n  renderAnswer = () => {\r\n    const { answers } = this.state;\r\n    const { classes } = this.props;\r\n\r\n    return Object.keys(answers).map( key => (\r\n        <div key={key} className={classes.textFieldDiv}>\r\n            <TextField\r\n              id=\"outlined-name\"\r\n              label={key}\r\n              className={classes.textFieldWithButton}\r\n              value={this.state.answers[key]}\r\n              onChange={ (event) => this.handleChange(event, 'answers', key)}\r\n              margin=\"normal\"\r\n              variant=\"outlined\"\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n              InputProps={{\r\n                style: {\r\n                  fontSize: 13,\r\n                  height: 45,\r\n                },\r\n              }}\r\n            />\r\n            <Button variant=\"contained\" size=\"medium\" color={this.state.correctAnswer === key ? 'secondary' : 'primary'} className={classes.textFieldButton} onClick={ () => this.setCorrectAnswer(key) }>\r\n              Rätt svar\r\n            </Button>\r\n        </div>\r\n      )\r\n    )\r\n  }\r\n\r\n  setCorrectAnswer = data => {\r\n      this.setState({ correctAnswer: data });\r\n  }\r\n\r\n  saveQuestion = () => {\r\n\r\n      const { dispatch } = this.props;\r\n      let passed = true;\r\n\r\n      if (this.state.question.length < 4 && typeof this.state.question !== 'string') {\r\n          passed = false;\r\n      }\r\n\r\n      /* Check answer lengths */\r\n      for (let key in this.state.answers) {\r\n          if(this.state.answers[key].length === 0){\r\n              passed = false;\r\n          }\r\n      }\r\n\r\n      /* Check for correctAnswer */\r\n      if (!this.state.correctAnswer) {\r\n            passed = false;\r\n      }\r\n\r\n      if (passed) {\r\n          dispatch(showSnackbarMessage('Du la till en fråga'));\r\n          this.props.addQuestion({ ...this.state, answers: { ...this.state.answers }});\r\n          this.setState({\r\n            question: '',\r\n            answers: {\r\n              a: '',\r\n              b: ''\r\n            },\r\n            correctAnswer: null\r\n          });\r\n      } else {\r\n          dispatch(showSnackbarError('Frågan uppfyller inte kraven.'));\r\n      }\r\n  }\r\n\r\n  // add and remove options based on listAlpah\r\n  changeAnswersOption = add => {\r\n    const { answers } = { ...this.state };\r\n    const indexToAdd = Object.keys(answers).length;\r\n\r\n    // check if able to add more option based on listAlpah\r\n    if (add && indexToAdd < Object.keys(listAlpah).length){\r\n        answers[listAlpah[indexToAdd]] = '';\r\n        this.setState({answers: answers })\r\n\r\n        // removes option if we got more than 2 to choose between\r\n      } else if (!add && indexToAdd > 2 ) {\r\n        delete answers[listAlpah[indexToAdd - 1]]\r\n        this.setState({answers: answers })\r\n      }\r\n  }\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    const answersList = this.renderAnswer();\r\n    return (\r\n      <Paper style={{ width: 600, padding: 20, margin: '0px auto' }}>\r\n      <Typography variant=\"h5\" gutterBottom>Lägg till fråga</Typography>\r\n        <TextField\r\n          id=\"outlined-name\"\r\n          label=\"Fråga\"\r\n          value={this.state.question}\r\n          onChange={ (event) => this.handleChange(event, 'question')}\r\n          margin=\"normal\"\r\n          variant=\"outlined\"\r\n          multiline\r\n          fullWidth\r\n          InputLabelProps={{\r\n            shrink: true,\r\n          }}\r\n          InputProps={{\r\n            style: {\r\n              fontSize: 13,\r\n            },\r\n          }}\r\n        />\r\n        { answersList }\r\n        <div style={{marginTop: 20}}>\r\n          <Button variant=\"outlined\" color=\"secondary\" size=\"small\" className={classes.button} onClick={ ()=>this.changeAnswersOption(true)}>\r\n            Lägg till svarsalternativ\r\n          </Button>\r\n          <Button variant=\"outlined\" color=\"secondary\" size=\"small\" className={classes.button} onClick={ ()=>this.changeAnswersOption(false)}>\r\n            Ta bort svarsalternativ\r\n          </Button>\r\n          <Button variant=\"outlined\" color=\"primary\" size=\"small\" className={classes.button} onClick= { this.saveQuestion }>\r\n            Spara frågan\r\n          </Button>\r\n        </div>\r\n      </Paper>\r\n  );\r\n  }\r\n};\r\n\r\nconst mapStateToProps = store => ({\r\n  snackbarOpen: store.errorHandling.snackbarOpen,\r\n  error: store.errorHandling.error,\r\n  message: store.errorHandling.message,\r\n});\r\n\r\nexport default connect(mapStateToProps)(withStyles(styles)(AddQuest));\r\n","import React, { Component, Fragment } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\r\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { connect } from 'react-redux';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport Hashids from 'hashids';\r\n\r\n// import ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport AddQuest from './AddQuest.js';\r\nimport Menu from './Menu.js';\r\nimport ErrorHandling from './ErrorHandling.js';\r\nimport { createCollectionAction, updateCollectionAction, removeCollectionAction, updateCollection } from '../actions/questionCollectionActions.js';\r\nimport { showSnackbarError } from '../actions/errorHandlingActions';\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n  },\r\n  expand: {\r\n    width: 'calc(100% - 68px)',\r\n    marginLeft: 10,\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    fontWeight: theme.typography.fontWeightRegular,\r\n  },\r\n  contentWrapper: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n  },\r\n  button: {\r\n      margin: 10\r\n  },\r\n  removeButtonDiv: {\r\n      border: '1px solid #e67575',\r\n      borderRadius: 5,\r\n      display: 'inline-block'\r\n  },\r\n  paper: {\r\n    width: 600,\r\n    padding: 20,\r\n    marginBottom: 20,\r\n    marginTop: 20,\r\n    margin: '0px auto'\r\n  },\r\n  expPanel: {\r\n      color: 'red',\r\n      justifyContent: 'space-between',\r\n  }\r\n\r\n});\r\n\r\nconst min_title_length  = 4;\r\nconst min_desc_length   = 4;\r\nconst min_img_length    = 4;\r\n\r\nclass HandleQuestions extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n        _id: null,\r\n        isLoaded: false,\r\n        questions: {},\r\n        imgUrl: '',\r\n        description: '',\r\n        new_quiz: true\r\n    }\r\n  }\r\n\r\n  static getDerivedStateFromProps(props, state) {\r\n    const { questionCollections } = props;\r\n    const { isLoaded } = state;\r\n    const collectionId = props.match && props.match.params && props.match.params.id;\r\n\r\n    if ( collectionId && Object.keys(questionCollections).length > 0 && !isLoaded ) {\r\n      const { questions, imgUrl, title, description, _id } = questionCollections[collectionId];\r\n      return ({questions, imgUrl, title, description, _id, isLoaded: true, new_quiz: false })\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  handleChangeQuestions = (event, questKey, changeKey) => {\r\n    if(event.target.value !== undefined){\r\n      const questions = this.state.questions\r\n\r\n      if(changeKey === 'correctAnswer'){\r\n        questions[questKey][changeKey] = event.target.value;\r\n      } else {\r\n          questions[questKey].answers[changeKey] = event.target.value;\r\n      }\r\n\r\n      this.setState({ questions: questions });\r\n    }\r\n  }\r\n\r\n  handleChange = (event, changeKey) => {\r\n    if(event.target.value !== undefined){\r\n      this.setState({ [changeKey]: event.target.value });\r\n    }\r\n  }\r\n\r\n  addQuestion = data => {\r\n\r\n      const { dispatch } = this.props;\r\n      const hashids = new Hashids(data.question);\r\n      const question_id = hashids.encode(Math.ceil(Math.random() * 1000));\r\n\r\n      this.setState({ questions: { ...this.state.questions, [question_id]: data }});\r\n\r\n      if ( !this.state.new_quiz ){\r\n\r\n          /* Define the collection we shall edit */\r\n          const collectionId = this.props.match && this.props.match.params && this.props.match.params.id;\r\n          let collection = this.props.questionCollections[collectionId];\r\n\r\n          /* Add question to the collection */\r\n          collection.questions = collection.questions ? collection.questions : {}\r\n          collection.questions[data.question] = data;\r\n\r\n          /* Then update in store */\r\n          dispatch(updateCollection(collection));\r\n\r\n      }\r\n  }\r\n\r\n  saveQuiz = () => {\r\n      const { dispatch } = this.props;\r\n      const quiz = {\r\n          ...this.state,\r\n          title: this.state.title,\r\n          description: this.state.description,\r\n          imgUrl: this.state.imgUrl,\r\n          questions: this.state.questions,\r\n          category: 'Temporary',\r\n      }\r\n\r\n      /* Add order to questions */\r\n      let index = 1;\r\n      for(let q in quiz.questions){\r\n          quiz.questions[q].order = index;\r\n          index++;\r\n      }\r\n\r\n      if(checkQuizData(quiz)){\r\n          /* Update / Create tbe quiz collection */\r\n          if(this.state.new_quiz){\r\n              dispatch(createCollectionAction(quiz));\r\n          } else {\r\n              dispatch(updateCollectionAction(quiz));\r\n          }\r\n      } else {\r\n          dispatch(showSnackbarError('Frågesamlingen uppfyller inte alla krav!'));\r\n      }\r\n  }\r\n\r\n  removeQuiz = () => {\r\n      const { dispatch } = this.props;\r\n      dispatch(removeCollectionAction(this.state._id));\r\n  }\r\n\r\n  removeQuestion = question => {\r\n      const { dispatch } = this.props;\r\n\r\n      if ( this.state.new_quiz ){\r\n          let questions = { ...this.state.questions };\r\n          delete(questions[question]);\r\n          this.setState({ questions: questions });\r\n      } else {\r\n\r\n          /* Define the collection we shall edit */\r\n          const collectionId = this.props.match && this.props.match.params && this.props.match.params.id;\r\n          let collection = this.props.questionCollections[collectionId];\r\n\r\n          /* Add question to the collection */\r\n          delete(collection.questions[question]);\r\n\r\n          /* Then update in store */\r\n          dispatch(updateCollection(collection));\r\n      }\r\n\r\n  }\r\n\r\n  renderTableView = () => {\r\n    const { questionCollections } = this.props;\r\n    const collectionId = this.props.match && this.props.match.params && this.props.match.params.id;\r\n    let new_quiz = false;\r\n    if( !this.state._id ){\r\n        new_quiz = true;\r\n    } else if (Object.keys(questionCollections).length === 0 || !collectionId ) {\r\n        return null;\r\n    }\r\n\r\n    /* If we're creating a quiz, set the questions from state */\r\n    const { questions } = new_quiz ? this.state : questionCollections[collectionId];\r\n    if( !questions) return 'Inga frågor finns i samlingen';\r\n    return Object.keys(questions).map( (key ,index) => {\r\n        const item = questions[key];\r\n        return (\r\n          <ExpansionPanel key={index} style={{ width: 640, marginLeft: -20 }}>\r\n            <ExpansionPanelSummary>\r\n              <div id=\"expPanel\">\r\n                <Typography>{item.question}</Typography>\r\n              </div>\r\n              <Button style={{paddingRight: 0}} variant=\"outlined\" color=\"secondary\" onClick={e => this.removeQuestion(key)}><p style={{paddingRight: 15}}>Ta bort</p></Button>\r\n            </ExpansionPanelSummary>\r\n            <ExpansionPanelDetails >\r\n\r\n              {/*  Show all options */}\r\n              <div>\r\n                {Object.keys(questions[key].answers).map( optionKey => (\r\n                    <TextField\r\n                        key={optionKey}\r\n                        id=\"standard-full-width\"\r\n                        label={optionKey}\r\n                        value={questions[key].answers[optionKey]}\r\n                        style={{ margin: 8 }}\r\n                        placeholder=\"Placeholder\"\r\n                        fullWidth\r\n                        margin=\"normal\"\r\n                        onChange={(event)=> this.handleChangeQuestions(event, key, optionKey)}\r\n                        InputLabelProps={{\r\n                            shrink: true,\r\n                        }}\r\n                        />\r\n                  ))}\r\n\r\n                  {/* Shows correct answer.. not completed yet */}\r\n                  <TextField\r\n                    id=\"standard-full-width\"\r\n                    label='correctAnswer'\r\n                    value={questions[key]['correctAnswer']}\r\n                    style={{ margin: 8 }}\r\n                    placeholder=\"Rätt svar\"\r\n                    fullWidth\r\n                    margin=\"normal\"\r\n                    onChange={(event)=> this.handleChangeQuestions(event, key, 'correctAnswer')}\r\n                    InputLabelProps={{\r\n                    shrink: true,\r\n                    }}\r\n                  />\r\n              </div>\r\n            </ExpansionPanelDetails>\r\n          </ExpansionPanel>\r\n      )\r\n    })\r\n  };\r\n\r\n  render(){\r\n    const { title, imgUrl, description } = this.state;\r\n    const { classes, history } = this.props;\r\n    const table = this.renderTableView();\r\n\r\n\r\n    return (\r\n      <Fragment>\r\n        <Menu history={ history } createQuiz={ true }/>\r\n        <div style={{float: 'right', marginTop: 10}}>\r\n        <Button variant=\"contained\" color=\"primary\" className={classes.button} onClick= { this.saveQuiz }>\r\n          Spara Quiz\r\n        </Button>\r\n        {!this.state.new_quiz &&\r\n            <Button variant=\"contained\" color=\"secondary\" className={classes.button} onClick= { this.removeQuiz }>\r\n              Ta bort Quiz\r\n            </Button>\r\n        }\r\n        </div>\r\n        <div className={classes.root}>\r\n          <Paper className={classes.paper}>\r\n          <Typography variant=\"h5\" gutterBottom>Skapa quiz</Typography>\r\n            <TextField\r\n              id=\"outlined-name\"\r\n              label='Title'\r\n              className={classes.textField}\r\n              value={title}\r\n              onChange={(event)=> this.handleChange(event, 'title')}\r\n              margin=\"normal\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n              InputProps={{\r\n                style: {\r\n                  fontSize: 13,\r\n                  height: 45,\r\n                },\r\n              }}\r\n            />\r\n            <br/>\r\n            <TextField\r\n              id=\"outlined-name\"\r\n              label='Beskrivning'\r\n              value={description}\r\n              className={classes.textField}\r\n              onChange={(event)=> this.handleChange(event, 'description')}\r\n              margin=\"normal\"\r\n              variant=\"outlined\"\r\n              multiline\r\n              fullWidth\r\n              rows={2}\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n              InputProps={{\r\n                style: {\r\n                  fontSize: 13,\r\n                },\r\n              }}\r\n            />\r\n            <br/>\r\n            <TextField\r\n              id=\"outlined-name\"\r\n              label='Bild url'\r\n              value={imgUrl}\r\n              className={classes.textField}\r\n              onChange={(event)=> this.handleChange(event, 'imgUrl')}\r\n              margin=\"normal\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n              InputProps={{\r\n                style: {\r\n                  fontSize: 13,\r\n                  height: 45,\r\n                },\r\n              }}\r\n            />\r\n            <div style={{ display:'flex', justifyContent: 'center'}}>\r\n              <img src={imgUrl} alt=\"Bild Saknas\" height=\"300\" width='auto' style={{ margin: 50 }} />\r\n            </div>\r\n            </Paper>\r\n          </div>\r\n          <AddQuest dispatch={this.props.dispatch} addQuestion={this.addQuestion} />\r\n        <ErrorHandling />\r\n      <Paper style={{width: 600, margin: '20px auto', padding: 20, marginBottom: '500px'}}>\r\n        <Typography variant=\"h5\" gutterBottom>Frågor</Typography>\r\n        { table }\r\n      </Paper>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nfunction checkQuizData(data){\r\n\r\n    const { title, description, imgUrl } = data;\r\n\r\n    if(!title || !description || !imgUrl)\r\n        return false;\r\n\r\n    if(title.length < min_title_length || description.length < min_desc_length || imgUrl.length < min_img_length)\r\n        return false;\r\n\r\n    return true;\r\n}\r\n\r\nHandleQuestions.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nlet mapStateToProps = store => ({\r\n    fetched: store.users.fetched,\r\n    users: store.users.data,\r\n    questionCollections: store.questionCollections.data,\r\n});\r\n\r\nexport default connect(mapStateToProps)(withStyles(styles)(HandleQuestions));\r\n","import { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { logoutUserAction } from '../actions/authActions.js';\r\n\r\n\r\nclass Logout extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        const { dispatch, history } = props;\r\n        dispatch(logoutUserAction());\r\n        history.push('/');\r\n    }\r\n\r\n  render() {\r\n    return null;\r\n  }\r\n}\r\n\r\n\r\nlet mapStateToProps = state => ({\r\n    value: state.value\r\n});\r\n\r\nexport default connect(mapStateToProps)(Logout);\r\n","import React from 'react';\r\nimport { Switch, Route } from 'react-router-dom';\r\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\r\nimport createPalette from '@material-ui/core/styles/createPalette';\r\n\r\n// import Room from './components/Room.js'\r\nimport Home from './components/Home.js'\r\nimport Room from './components/Room.js'\r\n\r\n// admin\r\nimport Adminpanel from './components/Adminpanel.js'\r\nimport AdminLogin from './components/AdminLogin.js';\r\n\r\nimport Project from './components/Project.js'\r\nimport HandleQuestions from './components/HandleQuestions.js'\r\nimport ActiveUsers from './components/ActiveUsers.js'\r\nimport Timer from './components/TimerBar.js'\r\nimport Logout from './components/Logout.js'\r\n\r\n\r\n// Om någon kommer på ett schysst färgtema eller om vi ska diskutera det tillsammans, ändra färgerna nedanför,\r\n// därefter kan man använda primary och secondary som color= när man stylar en komponent från material-ui.\r\nconst theme = createMuiTheme({\r\n  palette: createPalette({\r\n    primary: {\r\n      light: '#5E35B1',\r\n      main: '#512DA8',\r\n      dark: '#4527A0',\r\n      contrastText: '#fff',\r\n    },\r\n    secondary: {\r\n      light: '#FF9800',\r\n      main: '#FB8C00',\r\n      dark: '#F57C00',\r\n      contrastText: '#fff',\r\n    },\r\n  }),\r\n  overrides: {\r\n    MuiDialog: {\r\n      paperScrollPaper: {\r\n        overflowY: 'visible',\r\n      },\r\n    },\r\n  },\r\n  typography: {\r\n   useNextVariants: true,\r\n },\r\n});\r\n\r\n// TODO: Routes\r\n// /student\r\n// /admin\r\n\r\n\r\nconst Router = () => (\r\n  <MuiThemeProvider theme={theme}>\r\n    <Switch>\r\n      <Route exact path='/' component={Home}/>\r\n      <Route exact path='/room/:id' component={Room} />\r\n      <Route exact path='/admin/' component={AdminLogin} />\r\n      <Route exact path='/admin/settings' component={Adminpanel} />\r\n      <Route exact path='/admin/collection' component={HandleQuestions} />\r\n      <Route exact path='/admin/collection/:id' component={HandleQuestions} />\r\n      <Route exact path='/admin/users' component={ActiveUsers} />\r\n      <Route exact path='/admin/home/' component={Adminpanel}/>\r\n      <Route exact path='/project/:id' component={Project}/>\r\n      <Route exact path='/logout' component={Logout}/>\r\n      <Route exact path='/timer' component={Timer}/>\r\n    </Switch>\r\n  </MuiThemeProvider>\r\n)\r\n\r\nexport default Router;\r\n","import React, { Component } from 'react';\r\nimport Router from './router.js';\r\nimport './App.css';\r\n\r\n\r\nclass App extends Component {\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <Router />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n\r\n              // Execute callback\r\n              if (config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","export const ADD_TO_VALUE_EXAMPLE = 'ADD_TO_VALUE_EXAMPLE';\r\n\r\nconst initialState = {\r\n  title: null,\r\n}\r\n\r\nexport default function reducer(state = initialState, action ) {\r\n\r\n  switch ( action.type ) {\r\n\r\n    case ADD_TO_VALUE_EXAMPLE:\r\n      return {...state, title: action.payload}\r\n\r\n    default:\r\n      return state;\r\n  }\r\n\r\n}\r\n","const initialState = {\r\n  message: 'Initial message',\r\n  error: false,\r\n  snackbarOpen: false,\r\n};\r\n\r\nexport default function errorHandlingReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case 'SHOW_SNACKBAR_MESSAGE': {\r\n      return {\r\n        ...state, error: false, snackbarOpen: true, message: action.payload,\r\n      };\r\n    }\r\n    case 'SHOW_SNACKBAR_ERROR': {\r\n      return {\r\n        ...state, error: true, snackbarOpen: true, message: action.payload,\r\n      };\r\n    }\r\n    case 'CLOSE_FEEDBACK': {\r\n      return { ...state, snackbarOpen: false, dialogOpen: false };\r\n    }\r\n    default: return state;\r\n  }\r\n}\r\n","const initialState = {\r\n  fetched: false,\r\n  data: [],\r\n}\r\nconst reducer = (state = initialState , action ) => {\r\n\r\n  switch ( action.type ) {\r\n    case 'RECIVED_ALL_USER':\r\n    return {...state, data: action.payload, fetched: true}\r\n\r\n    default:\r\n    return state;\r\n  }\r\n\r\n}\r\n\r\nexport default reducer;\r\n","\r\nconst initialState = {\r\n  fetched: false,\r\n  name: '',\r\n  token: null\r\n}\r\n\r\n\r\n\r\nexport default function reducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case 'AUTH_RECEIVED': {\r\n      if (!action ) {\r\n        return state;\r\n      }\r\n        if (action.payload.token ) {\r\n          localStorage.setItem('token', action.payload.token);\r\n        }\r\n        localStorage.setItem('auth', JSON.stringify(action.payload));\r\n      return {\r\n        ...state, fetched: true, name: action.payload.name , token: action.payload.token,\r\n      };\r\n    }\r\n    case 'TOKEN_RECIEVED': {\r\n      return {\r\n        ...state, fetched: true, token: action.payload\r\n      };\r\n    }\r\n    case 'USER_LOGOUT': {\r\n      localStorage.removeItem('token');\r\n      localStorage.removeItem('auth');\r\n      return {\r\n        ...state, fetched: true, token: null, user: null\r\n      };\r\n    }\r\n    default: return state;\r\n  }\r\n}\r\n","\r\n// const questData = {\r\n//   wedw232332: {\r\n//     title: 'Javascript',\r\n//     imgUrl: 'https://images.pexels.com/photos/169573/pexels-photo-169573.jpeg?auto=compress&cs=tinysrgb&h=350',\r\n//     description: 'Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.',\r\n//     questions: {\r\n//       dwdwd: {\r\n//         question: 'hur många ben finns det i abborre?',\r\n//         answers: {\r\n//           a: 2,\r\n//           b: 0,\r\n//           c: 1,\r\n//           d: 3,\r\n//         },\r\n//         correctAnswer: 'a',\r\n//       },\r\n//       dwddefewrkey: {\r\n//         question: 'är himmeln blå?',\r\n//         answers: {\r\n//           a: 'Nej',\r\n//           b: 'Ja',\r\n//         },\r\n//         correctAnswer: 'b',\r\n//       },\r\n//       dwdweeer3d: {\r\n//         question: 'När inträffar julen?',\r\n//         answers: {\r\n//           a: 'Dagen före annandag jul',\r\n//           b: 'Dagen innan julafton',\r\n//           c: 'Två dagar före julafton',\r\n//           d: 'Två dagar före annandag jul',\r\n//         },\r\n//         correctAnswer: 'd',\r\n//       },\r\n//     }\r\n//   },\r\n//   wwewewww: {\r\n//     title: 'Javascript Vanilla',\r\n//     imgUrl: 'https://images.pexels.com/photos/248515/pexels-photo-248515.png?auto=compress&cs=tinysrgb&h=350',\r\n//     description: 'Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.',\r\n//     questions: {\r\n//       dwdwd: {\r\n//         question: 'Vad står nan för?',\r\n//         answers: {\r\n//           a: 'Not a nickle',\r\n//           b: 'normalize a number',\r\n//           c: 'not a number',\r\n//           d: 'mabe a number',\r\n//         },\r\n//         correctAnswer: 'c',\r\n//       },\r\n//       dwddefewrkey: {\r\n//         question: 'är vattnet vått?',\r\n//         answers: {\r\n//           a: 'Nej',\r\n//           b: 'Ja',\r\n//         },\r\n//         correctAnswer: 'b',\r\n//       },\r\n//       dwdweeer3d: {\r\n//         question: 'är Gustav här?',\r\n//         answers: {\r\n//           a: 'Ja',\r\n//           b: 'Nej',\r\n//         },\r\n//         correctAnswer: 'a',\r\n//       },\r\n//     }\r\n//   }\r\n// }\r\n\r\nconst initialState = {\r\n  fetched: false,\r\n  data: [],\r\n}\r\n\r\n\r\n\r\nexport default function reducer(state = initialState, action) {\r\n  switch (action.type) {\r\n\r\n    case 'COLLECTION_RECIEVED': {\r\n      return {\r\n        ...state, fetched: true, data: action.payload,\r\n      };\r\n    }\r\n\r\n    case 'COLLECTION_ADD': {\r\n      return {\r\n        ...state,\r\n        data: [ ...state.data, action.payload ],\r\n      };\r\n    }\r\n    case 'COLLECTION_UPDATE': {\r\n      const indexOfOldCollection = state.data.findIndex(x => x._id === action.payload._id);\r\n\r\n      return {\r\n        ...state,\r\n        data: [\r\n          ...state.data.slice(0, indexOfOldCollection),\r\n          action.payload,\r\n          ...state.data.slice(indexOfOldCollection + 1)\r\n        ]\r\n      };\r\n    }\r\n    case 'COLLECTION_DELETE': {\r\n      return {\r\n        ...state,\r\n        data: state.data.filter(x => x._id !== action.payload._id),\r\n      };\r\n    }\r\n    /* state.itemData.present.filter(x => x.uid !== action.item.uid) */\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","\r\nexport const ROOM_RECIVED = 'ROOM_RECIVED';\r\n\r\nconst initialState = {\r\n  fetched: false,\r\n  timer: {\r\n    started: false,\r\n    stoped: false,\r\n    ended: false,\r\n  },\r\n}\r\n\r\nexport default function reducer(state = initialState, action ) {\r\n\r\n  switch ( action.type ) {\r\n    case ROOM_RECIVED:\r\n      return {...state, data: action.payload , fetched: true}\r\n\r\n    default:\r\n      return state;\r\n  }\r\n\r\n}\r\n","export const UPDATE_USER = 'UPDATE_USER';\r\nexport const UPDATE_POINTS = 'UPDATE_POINTS';\r\n\r\nconst initialState = {\r\n  fetched: false,\r\n  data:{}\r\n}\r\n\r\nexport default function reducer(state = initialState, action ) {\r\n\r\n  switch ( action.type ) {\r\n    case UPDATE_USER:\r\n      localStorage.setItem('student', JSON.stringify(action.payload));\r\n      return {...state, data: action.payload , fetched: true}\r\n\r\n    case UPDATE_POINTS:\r\n      // local storage update\r\n      const student = JSON.parse(localStorage.getItem('student'));\r\n      student.points = action.payload.points;\r\n      localStorage.setItem('student', JSON.stringify(student));\r\n\r\n      const newState = { ...state};\r\n      newState.data.points = action.payload.points;\r\n      return newState\r\n    default:\r\n      return state;\r\n  }\r\n\r\n}\r\n","/* Import combineReducers */\r\nimport { combineReducers } from 'redux';\r\n\r\n/* Import our reducers */\r\nimport quizReducer from './quizReducer.js';\r\nimport errorHandlingReducers from './errorHandlingReducers.js'\r\nimport activeUsersReducer from './activeUsersReducer.js'\r\nimport authReducer from './authReducer.js'\r\nimport collectionsReducer from './collectionsReducer.js'\r\nimport roomReducer from './roomReducer.js'\r\nimport userReducer from './userReducer.js'\r\n\r\nlet rootReducer = combineReducers ({\r\n  editQuiz: quizReducer,\r\n  errorHandling: errorHandlingReducers,\r\n  users: activeUsersReducer,\r\n  auth: authReducer,\r\n  questionCollections: collectionsReducer,\r\n  activeRoom: roomReducer,\r\n  user: userReducer,\r\n});\r\n\r\nexport default rootReducer;\r\n","import { createStore, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\n\r\nimport rootReducer from './reducers/rootReducer.js';\r\n\r\nconst initialState = {};\r\n\r\nexport default createStore(\r\n  rootReducer,\r\n  initialState,\r\n  composeWithDevTools(\r\n    applyMiddleware(\r\n      thunk\r\n    )\r\n  ));/*,\r\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\r\n*/\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\n/* Redux */\r\nimport { Provider } from 'react-redux';\r\nimport store from './store.js';\r\n\r\n/* Router */\r\nimport { BrowserRouter } from 'react-router-dom';\r\n\r\nReactDOM.render((\r\n    <Provider store={store}>\r\n      <BrowserRouter basename=\"/begame/\">\r\n        <App />\r\n      </BrowserRouter>\r\n    </Provider>\r\n), document.getElementById('root'));\r\n\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}